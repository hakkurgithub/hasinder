// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../app/admin/haberler/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/haberler">> = Specific
  const handler = {} as typeof import("../../app/admin/haberler/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/akilli-eslestirme/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/akilli-eslestirme">> = Specific
  const handler = {} as typeof import("../../app/akilli-eslestirme/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/basinda-biz/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/basinda-biz">> = Specific
  const handler = {} as typeof import("../../app/basinda-biz/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dns-kayitlari/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dns-kayitlari">> = Specific
  const handler = {} as typeof import("../../app/dns-kayitlari/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/ekonomi-haberleri/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ekonomi-haberleri/[id]">> = Specific
  const handler = {} as typeof import("../../app/ekonomi-haberleri/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/ekonomi-haberleri/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ekonomi-haberleri">> = Specific
  const handler = {} as typeof import("../../app/ekonomi-haberleri/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/etkinlikler/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/etkinlikler">> = Specific
  const handler = {} as typeof import("../../app/etkinlikler/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/firma-profili/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/firma-profili">> = Specific
  const handler = {} as typeof import("../../app/firma-profili/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/firsatlar/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/firsatlar/[id]">> = Specific
  const handler = {} as typeof import("../../app/firsatlar/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/giris/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/giris">> = Specific
  const handler = {} as typeof import("../../app/giris/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/hakkimizda/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hakkimizda">> = Specific
  const handler = {} as typeof import("../../app/hakkimizda/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/iletisim/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/iletisim">> = Specific
  const handler = {} as typeof import("../../app/iletisim/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/kesfet/[id]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kesfet/[id]">> = Specific
  const handler = {} as typeof import("../../app/kesfet/[id]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/kesfet/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/kesfet">> = Specific
  const handler = {} as typeof import("../../app/kesfet/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/pazarlama-araclari/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/pazarlama-araclari">> = Specific
  const handler = {} as typeof import("../../app/pazarlama-araclari/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
